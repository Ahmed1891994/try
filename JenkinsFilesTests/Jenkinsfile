pipeline {
    agent any
    stages {
        stage("Start Pull Latest Image") {
            steps {
                bat "docker pull ahmedhakem/cucumber-docker:cucumber-docker"
            }
        }
        stage("Start Grid") {
            steps {
                bat "docker-compose up -d hub"
            }
        }
        stage("Run Firefox Tests") {
            steps {
                bat "docker-compose up -d firefox"
                bat "docker-compose up testng-firefox"
                bat "move testng_results\\cucumberReports.json testng_results\\cucumberReports\\firefox_cucumber_report.json" // Rename the report file
            }
        }
        stage("Run Chrome Tests") {
            steps {
                bat "docker-compose up -d chrome"
                bat "docker-compose up testng-chrome"
                bat "move testng_results\\cucumberReports.json testng_results\\cucumberReports\\chrome_cucumber_report.json" // Rename the report file
            }
        }
        stage("Run Edge Tests") {
            steps {
                bat "docker-compose up -d edge"
                bat "docker-compose up testng-edge"
                bat "move testng_results\\cucumberReports.json testng_results\\cucumberReports\\edge_cucumber_report.json" // Rename the report file
            }
        }
    }
    post {
        always {
            // If Maven was able to run the tests, even if some of the test
                // failed, record the test results and archive the jar file.               
                success {
                  publishHTML([
                              allowMissing: false, 
                              alwaysLinkToLastBuild: false, 
                              keepAll: false, 
                              reportDir: 'Reports', 
                              reportFiles: 'Spark.html', 
                              reportName: 'ExtentReport', 
                              reportTitles: '', 
                              useWrapperFileDirectly: true])
                }
        }
    }


}
