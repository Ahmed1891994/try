pipeline {
    agent any
    stages {
        stage("Start Pull Latest Image") {
            steps {
                bat "docker pull ahmedhakem/cucumber-docker:cucumber-docker"
            }
        }
        stage("Start Grid") {
            steps {
                bat "docker-compose up -d hub"
            }
        }
        stage("Run Firefox Tests") {
            steps {
                bat "docker-compose up -d firefox"
                bat "docker-compose up testng-firefox"
                bat "move testng_results\\cucumberReports.json testng_results\\cucumberReports\\firefox_cucumber_report.json" // Rename the report file
            }
        }
        stage("Run Chrome Tests") {
            steps {
                bat "docker-compose up -d chrome"
                bat "docker-compose up testng-chrome"
                bat "move testng_results\\cucumberReports.json testng_results\\cucumberReports\\chrome_cucumber_report.json" // Rename the report file
            }
        }
        stage("Run Edge Tests") {
            steps {
                bat "docker-compose up -d edge"
                bat "docker-compose up testng-edge"
                bat "move testng_results\\cucumberReports.json testng_results\\cucumberReports\\edge_cucumber_report.json" // Rename the report file
            }
        }
    }
    post {
        always {
            bat "npm install -g cucumber-report-generator"
            bat "cucumber-report-generator -o consolidated-report.html testng_results/**/.json"
            cucumber buildStatus: 'null', customCssFiles: '', customJsFiles: '', failedFeaturesNumber: -1, failedScenariosNumber: -1, failedStepsNumber: -1, 
            jsonReportDirectory: "testng_results/cucumberReports", fileIncludePattern: '*_cucumber_report.json', pendingStepsNumber: -1, skippedStepsNumber: -1, sortingMethod: 'ALPHABETICAL', undefinedStepsNumber: -1
        }
    }


}
